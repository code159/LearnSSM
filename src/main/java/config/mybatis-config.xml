<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<!-- mybatis 用来建立 sessionFactory 用的，里面主要包含了数据库连接相关东西，还有 java 类所对应的别名 -->
<configuration>
    <properties resource="config/config.properties"><!--定义配置信息，在本配置中可以使用${key}来引用-->
       <!--同名的key，config.properties覆盖property子元素的属性值-->
        <property name="name1" value="value.in.property.element"/>
    </properties>
    <typeAliases>
        <!--类型的别名: 用法,在resultType和parameterType可以使用别名，而不是全限定的类名-->
        <typeAlias alias="Student" type="org.lyb.model.Student"/>
        <typeAlias alias="Article" type="org.lyb.model.Article"/>
        <!--包名下的Model类，使用类名作为别名，不区分大小写-->
        <package name="org.lyb.model"/>
    </typeAliases>
    <environments default="development"><!--默认的环境信息，在生产环境中需要修改production-->
        <environment id="development"><!--开发环境的配置-->
            <!--事务管理，MyBatis提供了两种方式，JDBC的连接事务管理以及Managed-->
            <transactionManager type="JDBC"/>
            <!--数据源配置-->
            <dataSource type="POOLED">
                <property name="driver" value="${driver}"/>
                <property name="url" value="${url}"/>
                <property name="username" value="${username}"/>
                <property name="password" value="${password}"/>
            </dataSource>
        </environment>
        <environment id="production"><!--生产环境的配置-->
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${driver}"/>
                <property name="url" value="${url}"/>
                <property name="username" value="${username}"/>
                <property name="password" value="${password}"/>
            </dataSource>
        </environment>
    </environments>
    <mappers>
        <!--SQL映射文件，可以多个-->
        <mapper resource="config/Students-Mapper.xml"/>
    </mappers>
</configuration>
